<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title><?js= (title) ? title : (kind === '') ? 'Home' : '' ?> | <?js= env.conf.metadata.title ?></title>
  <?js if (env.conf.opts.hasOwnProperty('prism-theme')) { ?>
    <link type="text/css" rel="stylesheet" href="styles/vendor/<?js= env.conf.opts['prism-theme'] ?>.css">
  <?js } else { ?>
    <link type="text/css" rel="stylesheet" href="styles/vendor/prism-tomorrow-night.css">
  <?js } ?>
  <link type="text/css" rel="stylesheet" href="styles/styles.css">
  <?js if (env.conf.metadata.favicon) { ?>
    <link type="image/x-icon" rel="icon" href="<?js= env.conf.metadata.favicon ?>">
  <?js } ?>
  <?js if (env.conf.hasOwnProperty('styles')) { ?>
  <?js var styles = env.conf.styles; ?>
  <style>
    :root {
      <?js= Object.keys(styles).map(key => `--${key}: ${styles[key]};`).join('\n      ') ?>
    }
  </style>
  <?js } ?>
</head>
<body>

<header class="layout-header">
  <?js if (env.conf.metadata.logo) { ?>
    <a href="./index.html">
      <img
        src="<?js= env.conf.metadata.logo ?>"
        alt="<?js= env.conf.metadata.title ?> logo"
      >
    </a>
  <?js } ?>
  <h1>
    <a href="./index.html">
      <?js= env.conf.metadata.title ?>
    </a>
  </h1>
  <nav class="layout-nav">
    <?js= this.nav ?>
  </nav>
</header>


<main class="layout-main <?js if (kind === 'source') { ?> layout-content--source<?js } ?>">
  <div class="container">
    <p class="page-kind"><?js= kind ?></p>
    <h1 class="page-title"><?js= title ?></h1>
    <?js if (kind === 'source') { ?>
      <?js if (env.conf.hasOwnProperty('repository')) { ?>
          <?js const repository = env.conf.repository; ?>
          <?js function addSlash(str) {
            const endsWithSlash = /\/$/;
            if (!endsWithSlash.test(str)) return str + '/';
            return str;
          } ?>
          <?js function linktoRepository(link, branch, filepath) {
            return `<a href="${link}blob/${branch}${filepath}" target="_blank">View ${(repository.type) ? `on ${repository.type}` : `in Repository`}</a>`;
          } ?>
          <?js if (repository.link && repository.branch) { ?>
            <?js const filepath = env.sourceFiles.find(filepath => filepath.includes(obj.title.replace(/\//g, '\\'))).replace(env.pwd + '\\', ''); ?>
            <h3><?js= linktoRepository(addSlash(repository.link), addSlash(repository.branch), filepath) ?></h3>
          <?js } ?>
        <?js } ?>
    <?js } ?>
    <?js= content ?>
  </div>
</main>

<footer class="layout-footer">
  <div class="container">
    Documentation generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc <?js= env.version.number ?></a><?js if(env.conf.templates && env.conf.templates.default && env.conf.templates.default.includeDate !== false) { ?> on <?js= (new Date()) ?><?js } ?>
  </div>
</footer>



<script src="scripts/prism.dev.js"></script>
</body>
</html>
